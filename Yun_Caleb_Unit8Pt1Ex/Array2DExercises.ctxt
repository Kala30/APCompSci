#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=
comment1.target=void\ seatingChart()
comment1.text=\r\n\ Prints\ out\ seating\ chart\ with\ traditional\ for\ loop.\r\n
comment10.params=arr
comment10.target=void\ print2D(int[][])
comment11.params=n
comment11.target=void\ multTable2(int)
comment2.params=
comment2.target=void\ seatingChartForEach()
comment2.text=\r\n\ Prints\ out\ seating\ chart\ with\ for\ each\ loop.\r\n
comment3.params=arr\ row
comment3.target=int\ rowSum(int[][],\ int)
comment3.text=\r\n\ Returns\ the\ sum\ of\ a\ specified\ row\ in\ arr.\r\n
comment4.params=arr\ col
comment4.target=int\ columnSum(int[][],\ int)
comment4.text=\r\n\ Returns\ the\ sum\ of\ the\ elements\ in\ column\ col\ of\ arr.\r\n
comment5.params=m
comment5.target=double\ positiveMax(double[][])
comment5.text=\r\n\ Returns\ the\ value\ of\ the\ largest\ positive\ element\ in\r\n\ the\ 2D\ array\ m,\ or\ 0,\ if\ all\ its\ elements\ are\ negative.\r\n
comment6.params=m1\ m2
comment6.target=boolean\ covers(double[][],\ double[][])
comment6.text=\r\n\ Returns\ true\ if\ m1\ "covers"\ m2,\ false\ otherwise.\r\n\ Precondition\:\ m1\ and\ m2\ have\ the\ same\ dimensions.\r\n
comment7.params=n
comment7.target=int[][]\ pascalTriangle(int)
comment7.text=\r\n\ Pascal's\ Triangle\r\n
comment8.params=
comment8.target=int[][]\ multTable()
comment8.text=\r\n\ Returns\ a\ 12x12\ array\ filled\ with\ all\ rows\ of\ multiplication\ tables\ up\ to\ 12.\r\n
comment9.params=
comment9.target=void\ print2DForEach()
comment9.text=\r\n\ Prints\ a\ 2D\ array\ with\ for-each\ loops.\r\n
numComments=12
