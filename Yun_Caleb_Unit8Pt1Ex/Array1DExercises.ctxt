#BlueJ class context
comment0.params=
comment0.target=void\ fill1DArray()
comment1.params=arr1\ arr2
comment1.target=int[]\ merge(int[],\ int[])
comment1.text=\r\n\ Returns\ an\ array\ of\ arr1\ and\ arr2\ merged\ together,\ starting\ with\ arr1\r\n\ \r\n\ @param\ arr1\ First\ array\ that\ will\ be\ merged\r\n\ @param\ arr2\ second\ array\ that\ will\ be\ merged\r\n\ @return\ An\ array\ containing\ all\ values\ of\ arr1\ and\ arr2\r\n
comment2.params=arr\ val\ index
comment2.target=int[]\ insert(int[],\ int,\ int)
comment2.text=\r\n\ Returns\ arr,\ but\ with\ an\ inserted\ value\ at\ the\ given\ index\ (will\ be\ one\ element\ longer)\r\n\ \r\n\ @param\ arr\ The\ array\ that\ we\ will\ insert\ a\ value\ into\ --\ Precondition\:\ length\ >\ 1\r\n\ @param\ val\ The\ value\ to\ be\ inserted\r\n\ @param\ index\ where\ val\ will\ be\ inserted\ into\ --\ Precondition\:\ index\ exists\ in\ arr\r\n\ @return\ array\ arr\r\n
comment3.params=arr
comment3.target=void\ swap(int[])
comment3.text=\r\n\ Takes\ an\ int\ array\ and\ swaps\ the\ first\ element\ with\ the\ last.\r\n\ \r\n\ @param\ arr\ Originial\ array\r\n\ @return\ Swapped\ array\r\n
comment4.params=n
comment4.target=int[]\ createWedge(int)
comment4.text=\r\n\ Returns\ an\ array\ filled\ with\ values\r\n\ 1,\ 2,\ \u2026\ ,\ n-1,\ n,\ n-1,\ \u2026\ ,\ 2,\ 1.\r\n
comment5.params=
comment5.target=int\ getToss()
comment5.text=\r\n\ \r\n
comment6.params=numTosses
comment6.target=int[]\ getCubeTosses(int)
comment6.text=\ Returns\ an\ array\ of\ the\ values\ obtained\ by\ tossing\ a\ number\ cube\ numTosses\ times.\r\n\ @param\ numTosses\ the\ number\ of\ tosses\ to\ be\ recorded\r\n\ \ \ \ \ \ \ \ \ \ Precondition\:\ numTosses\ >\ 0\r\n\ @return\ an\ array\ of\ \ numTosses\ values\r\n
comment7.params=tosses
comment7.target=int\ getLongestRun(int[])
comment7.text=\ Get\ the\ starting\ index\ of\ a\ longest\ run\ of\ two\ or\ more\ consecutive\ repeated\ values\ in\ the\ array\ values.\r\n\ @param\ values\ an\ array\ of\ integer\ values\ representing\ a\ series\ of\ number\ cube\ tosses\r\n\ \ Precondition\:\ values.length\ >\ 0\r\n\ @return\ \ the\ starting\ index\ of\ a\ run\ of\ maximum\ size;\r\n\ \ \ \ \ \ \ \ \ -1\ if\ there\ is\ no\ run\r\n
numComments=8
